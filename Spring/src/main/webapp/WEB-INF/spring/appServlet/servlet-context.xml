<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/**" />
	<resources mapping="/fonts/**" location="/fonts/**" />
	<resources mapping="/images/**" location="/images/**" />
	<resources mapping="/js/**" location="/js/**" />
	<resources mapping="/sass/**" location="/sass/**" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" id="viewResolver"/>
	<beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" id="jsonView">
		<beans:property value="application/json;charset=UTF-8" name="contentType"/>
	</beans:bean>

	<context:component-scan base-package="app.web.choi" />
	
	<beans:bean id="cronTask" class="app.web.choi.common.CronTask" />
    <task:scheduler id="cronScheduler" pool-size="10" />
    <task:annotation-driven scheduler="cronScheduler" />
    
    <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location" value="/WEB-INF/config/config.properties"/>
        <beans:property name="fileEncoding" value="UTF-8" />
    </beans:bean>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>

	<beans:bean id="interceptor" class="app.web.choi.common.Interceptor" />
	<interceptors>
		<interceptor>
			<mapping path="/**/*.do"/>
			<beans:ref bean="interceptor"/>
		</interceptor>
	</interceptors>

	<interceptors>
		<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="lang" />
		</beans:bean>
	</interceptors>
	
	<!-- AOP -->
	<aop:aspectj-autoproxy/>
	
	<!-- 트랜잭션 관리자 활성화 -->
    <tx:annotation-driven/>
    
    <!-- 트랜잭션 관리자 등록 -->
    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    
    <!-- JPA 예외를 스프링 예외로 변환 -->
    <beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <!-- JPA 설정 ( 엔티티 매니저 팩토리 등록 ) -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        
        <!-- @Entity 탐색 범위 -->
        <beans:property name="packagesToScan" value="app.web.choi.domain" />
        
        <!-- 하이버네이트 구현체 사용 -->
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </beans:property>
        
        <!-- 하이버네이트 상세 설정 -->
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</beans:prop> <!-- 방언 -->
                <beans:prop key="hibernate.show_sql">true</beans:prop>                          <!-- SQL 보기 -->
                <beans:prop key="hibernate.format_sql">true</beans:prop>                        <!-- SQL 정렬해서 보기 -->
                <beans:prop key="hibernate.use_sql_comments">true</beans:prop>                  <!-- SQL 주석 보기 -->
                <beans:prop key="hibernate.id.new_generator_mappings">true</beans:prop>         <!-- JPA 표준에 맞게 새로운 키 생성 전략을 사용-->
                <beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop>                    <!-- DDL 자동 생성 -->
            </beans:props>
        </beans:property>
    </beans:bean>
	
</beans:beans>