plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'

    // REST Docs : Asciidoctor 플러그인 적용
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group 'app.spring'
version '1.0-SNAPSHOT'

configurations {
    asciidoctorExtensions // REST Docs : dependencies 에서 적용한 것 추가
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Basic
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // database
    runtimeOnly 'com.h2database:h2'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // REST Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
    // REST Docs : 아래서 사용할 변수 선언
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()

    // REST Docs : 위에서 작성한 snippetsDir 디렉토리를 test의 output으로 구성하는 설정 -> 스니펫 조각들이 build/generated-snippets로 출력
    outputs.dir snippetsDir
}

// REST Docs 관련 설정
asciidoctor {
    dependsOn test // test 작업 이후에 동작하도록 설정
    configurations 'asciidoctorExtensions' // 위에서 작성한 configuration 적용
    inputs.dir snippetsDir // snippetsDir를 입력으로 구성
}

asciidoctor.doFirst {
    // static/docs 폴더 비우기
    delete file('src/main/resources/static/docs')
}

// asccidoctor 작업 이후 생성된 HTML 파일을 static/docs 로 copy
task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
// REST Docs